package dtos

import (
	"fmt"

	"github.com/cbstorm/nith_aio_backend/exceptions"
	"go.mongodb.org/mongo-driver/bson/primitive"
)

type CreateOne{{Case name}}Input struct {
	Name string `json:"name,omitempty"`
}

func NewCreateOne{{Case name}}Input() *CreateOne{{Case name}}Input {
	return &CreateOne{{Case name}}Input{}
}

type UpdateOne{{Case name}}Input struct {
	Id   primitive.ObjectID                    `json:"_id,omitempty"`
	Data *UpdateOne{{Case name}}Data 		   `json:"data,omitempty"`
}

func (d *UpdateOne{{Case name}}Input) SetId(id string) (*UpdateOne{{Case name}}Input, error) {
	objId, err := primitive.ObjectIDFromHex(id)
	if err != nil {
		return nil, exceptions.Err_BAD_REQUEST().SetMessage(fmt.Sprintf("id invalid with %s", id))
	}
	d.Id = objId
	return d, nil
}

type UpdateOne{{Case name}}Data struct {
	Name string `json:"name,omitempty"`
}

func NewUpdateOne{{Case name}}Input() *UpdateOne{{Case name}}Input {
	return &UpdateOne{{Case name}}Input{}
}